name: CI/CD Frontend + Backend + E2E

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
      - main

jobs:
  ### 1. FRONTEND
  frontend:
    name: Frontend Build & Test (React + TypeScript)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Type-check (TypeScript)
        run: npx tsc --noEmit

      - name: Lint frontend code
        run: npm run lint

      - name: Run frontend tests
        run: npm test

      - name: Build frontend
        run: npm run build

  ### 2. BACKEND
  backend:
    name: Backend Lint & Unit Tests (Python + Poetry)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: pip install poetry

      - name: Install backend dependencies
        run: poetry install

      - name: Lint backend code (Pylint)
        run: poetry run pylint src

      - name: Run backend unit tests with coverage
        run: poetry run coverage run -m pytest

      - name: Generate coverage report
        run: poetry run coverage xml

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          fail_ci_if_error: true

  ### 3. ROBOT TESTS (UI)
  robot-tests:
    name: Robot Framework UI Tests (E2E)
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Chromedriver
        uses: nanasess/setup-chromedriver@master

      - name: Start virtual display for UI tests
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

      - name: Run Robot Framework E2E tests
        run: bash run_robot_tests.sh