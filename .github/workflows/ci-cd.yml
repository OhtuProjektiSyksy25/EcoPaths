

name: CI/CD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  ### 1. FRONTEND (React + TypeScript)
  frontend:
    name: Frontend (React + TS)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Type-check (TS)
        run: npx tsc --noEmit

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

  ### 2. BACKEND (Python)
  backend:
    name: Backend (Python)
    runs-on: ubuntu-latest
    needs: frontend

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Lint with Pylint
        run: poetry run pylint src

      - name: Run unit tests
        run: poetry run coverage run --branch -m pytest

      - name: Generate coverage report
        run: poetry run coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  ### 3. ROBOT TESTS (UI testit)
  robot-tests:
    name: Robot Framework UI tests
    runs-on: ubuntu-latest
    needs: backend

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Chromedriver
        uses: nanasess/setup-chromedriver@master

      - name: Start virtual display
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

      - name: Run Robot tests
        run: bash run_robot_tests.sh


